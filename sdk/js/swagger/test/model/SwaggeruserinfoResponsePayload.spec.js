/**
 * 
 * Package main ORY Keto
 *
 * OpenAPI spec version: Latest
 * Contact: hi@ory.am
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerJsClient);
  }
}(this, function(expect, SwaggerJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SwaggeruserinfoResponsePayload', function() {
    it('should create an instance of SwaggeruserinfoResponsePayload', function() {
      // uncomment below and update the code to test SwaggeruserinfoResponsePayload
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be.a(SwaggerJsClient.SwaggeruserinfoResponsePayload);
    });

    it('should have the property birthdate (base name: "birthdate")', function() {
      // uncomment below and update the code to test the property birthdate
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property emailVerified (base name: "email_verified")', function() {
      // uncomment below and update the code to test the property emailVerified
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property familyName (base name: "family_name")', function() {
      // uncomment below and update the code to test the property familyName
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property givenName (base name: "given_name")', function() {
      // uncomment below and update the code to test the property givenName
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property locale (base name: "locale")', function() {
      // uncomment below and update the code to test the property locale
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property middleName (base name: "middle_name")', function() {
      // uncomment below and update the code to test the property middleName
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property nickname (base name: "nickname")', function() {
      // uncomment below and update the code to test the property nickname
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phone_number")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumberVerified (base name: "phone_number_verified")', function() {
      // uncomment below and update the code to test the property phoneNumberVerified
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property picture (base name: "picture")', function() {
      // uncomment below and update the code to test the property picture
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property preferredUsername (base name: "preferred_username")', function() {
      // uncomment below and update the code to test the property preferredUsername
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property profile (base name: "profile")', function() {
      // uncomment below and update the code to test the property profile
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property sub (base name: "sub")', function() {
      // uncomment below and update the code to test the property sub
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "website")', function() {
      // uncomment below and update the code to test the property website
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

    it('should have the property zoneinfo (base name: "zoneinfo")', function() {
      // uncomment below and update the code to test the property zoneinfo
      //var instane = new SwaggerJsClient.SwaggeruserinfoResponsePayload();
      //expect(instance).to.be();
    });

  });

}));
