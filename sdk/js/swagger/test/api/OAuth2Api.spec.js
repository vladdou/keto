/**
 * 
 * Package main ORY Keto
 *
 * OpenAPI spec version: Latest
 * Contact: hi@ory.am
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerJsClient);
  }
}(this, function(expect, SwaggerJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggerJsClient.OAuth2Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OAuth2Api', function() {
    describe('acceptOAuth2ConsentRequest', function() {
      it('should call acceptOAuth2ConsentRequest successfully', function(done) {
        //uncomment below and update the code to test acceptOAuth2ConsentRequest
        //instance.acceptOAuth2ConsentRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createOAuth2Client', function() {
      it('should call createOAuth2Client successfully', function(done) {
        //uncomment below and update the code to test createOAuth2Client
        //instance.createOAuth2Client(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOAuth2Client', function() {
      it('should call deleteOAuth2Client successfully', function(done) {
        //uncomment below and update the code to test deleteOAuth2Client
        //instance.deleteOAuth2Client(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOAuth2Client', function() {
      it('should call getOAuth2Client successfully', function(done) {
        //uncomment below and update the code to test getOAuth2Client
        //instance.getOAuth2Client(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOAuth2ConsentRequest', function() {
      it('should call getOAuth2ConsentRequest successfully', function(done) {
        //uncomment below and update the code to test getOAuth2ConsentRequest
        //instance.getOAuth2ConsentRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWellKnown', function() {
      it('should call getWellKnown successfully', function(done) {
        //uncomment below and update the code to test getWellKnown
        //instance.getWellKnown(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('introspectOAuth2Token', function() {
      it('should call introspectOAuth2Token successfully', function(done) {
        //uncomment below and update the code to test introspectOAuth2Token
        //instance.introspectOAuth2Token(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOAuth2Clients', function() {
      it('should call listOAuth2Clients successfully', function(done) {
        //uncomment below and update the code to test listOAuth2Clients
        //instance.listOAuth2Clients(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('oauthAuth', function() {
      it('should call oauthAuth successfully', function(done) {
        //uncomment below and update the code to test oauthAuth
        //instance.oauthAuth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('oauthToken', function() {
      it('should call oauthToken successfully', function(done) {
        //uncomment below and update the code to test oauthToken
        //instance.oauthToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectOAuth2ConsentRequest', function() {
      it('should call rejectOAuth2ConsentRequest successfully', function(done) {
        //uncomment below and update the code to test rejectOAuth2ConsentRequest
        //instance.rejectOAuth2ConsentRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('revokeOAuth2Token', function() {
      it('should call revokeOAuth2Token successfully', function(done) {
        //uncomment below and update the code to test revokeOAuth2Token
        //instance.revokeOAuth2Token(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOAuth2Client', function() {
      it('should call updateOAuth2Client successfully', function(done) {
        //uncomment below and update the code to test updateOAuth2Client
        //instance.updateOAuth2Client(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userinfo', function() {
      it('should call userinfo successfully', function(done) {
        //uncomment below and update the code to test userinfo
        //instance.userinfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('wellKnown', function() {
      it('should call wellKnown successfully', function(done) {
        //uncomment below and update the code to test wellKnown
        //instance.wellKnown(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
